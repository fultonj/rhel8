---
- hosts: rhel8
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ssh_git_checkout: 1
    tht_review: "631198"
    ceph_loop_device: /dev/loop3
    ceph_loop_device_file: /var/lib/ceph-osd.img
    ceph_logical_volume_group: ceph_vg
    ceph_logical_volume_wal: ceph_lv_wal
    ceph_logical_volume_db: ceph_lv_db
    ceph_logical_volume_data: ceph_lv_data
    ci_branch: master
  tasks:
    - name: install convenience packages
      become: true
      dnf:
        name: "{{ item }}"
        state: latest
      with_items:
        - tmux
        - emacs-nox
        - vim
        - git
        - gdisk
        - rpm-build
        - https://cbs.centos.org/kojifiles/packages/runc/1.0.0/60.dev.git2abd837.el7/x86_64/runc-1.0.0-60.dev.git2abd837.el7.x86_64.rpm
        - https://www.rpmfind.net/linux/fedora/linux/releases/28/Everything/x86_64/os/Packages/e/emacs-yaml-mode-0.0.13-4.fc28.noarch.rpm
        - http://dl.fedoraproject.org/pub/fedora/linux/releases/28/Everything/x86_64/os/Packages/g/git-review-1.25.0-9.fc28.noarch.rpm
    - name: Install faker script
      become: true
      get_url:
        url: https://raw.githubusercontent.com/lhh/faker/master/faker
        dest: /usr/local/bin/faker
        mode: 0755
    - name: fake rubypick installation
      become: true
      command: "/usr/local/bin/faker rubypick-1.1.1-8.haha"
    - name: write new ens4 config
      become: true
      copy:
        dest: /etc/sysconfig/network-scripts/ifcfg-ens4
        force: true
        content: |
          DEVICE=ens4
          BOOTPROTO=static
          ONBOOT=yes
          TYPE=Ethernet
          IPADDR={{ item.ip4 }}
          PREFIX={{ item.prefix }}
      when: "'{{ inventory_hostname }}' == '{{ item.host }}'"
      with_items:
        - { host: 'rhel8', ip4: '192.168.24.2', prefix: '24' }
    - name: bring up ens4
      become: true      
      command: "ifup ens4"
    - name: update /etc/hosts
      become: true
      copy:
        dest: /etc/hosts
        force: yes
        group: root
        owner: root
        mode: 0644
        content: |
          127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
          ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
          192.168.24.2    rhel8.example.com        rhel8
    - name: copy git clone shell script
      copy:
        dest: /home/stack/git_clone.sh
        force: yes
        group: stack
        owner: stack
        mode: 0755
        content: |
          export SSH_GIT_CHECKOUT={{ ssh_git_checkout }}
          if [[ $SSH_GIT_CHECKOUT -eq 1 ]]; then
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git clone git@github.com:/fultonj/oooq.git
            git clone git@github.com:/fultonj/rhel8.git
            ln -s oooq/git-init.sh
            bash git-init.sh
          else
            git clone https://github.com/fultonj/rhel8.git
            export THT_REVIEW={{ tht_review }}
            if [[ ! -z $THT_REVIEW ]]; then
              echo "Downloading unmerged archive of THT review"
              mkdir templates
              pushd templates
              curl $THT_REVIEW > templates.tar.gz
              tar xf templates.tar.gz
              rm -f templates.tar.gz
              popd
            else
              git clone https://github.com/openstack/tripleo-heat-templates.git
              ln -s tripleo-heat-templates templates
            fi
          fi
          if [[ ! -e 0_bootstrap.sh ]]; then
            ln -s rhel8/standalone/bootstrap.sh 0_bootstrap.sh
          fi
          if [[ ! -e 1_containers.sh ]]; then
            ln -s rhel8/standalone/containers.sh 1_containers.sh
          fi
          if [[ ! -e 2_ceph_prep.sh ]]; then
            ln -s rhel8/standalone/ceph_prep.sh 2_ceph_prep.sh
          fi
          if [[ ! -e 3_deploy.sh ]]; then
            ln -s rhel8/standalone/deploy.sh 3_deploy.sh
          fi
    - name: execute git_clone.sh on remote servers (not doing ssh_git_checkout)
      shell: "bash /home/stack/git_clone.sh"
      when: "{{ ssh_git_checkout }} == 0"
    - name: upload standalone blobs
      synchronize:
        mode: push
        dest: /home/stack/standalone-blobs/
        src:  /home/fultonj/rhel8/standalone/blobs/
      tags: sync
    - name: stat ceph_loop_device see if it already exists
      stat:
        path: "{{ ceph_loop_device }}"
      register: dev_loop3_res
    - name: log to syslog if ceph_loop_device exists
      syslogger:
        msg: "boostrap-subnodes - warning {{ ceph_loop_device }} already exists"
      when: dev_loop3_res.stat.exists
    - name: Make sure we have losetup and lvm2 installed/latest
      package:
        name: [util-linux, lvm2]
        state: latest
    - name: Use dd and losetup to create the loop device
      become: true
      shell: |
        dd if=/dev/zero of={{ ceph_loop_device_file }} bs=1 count=0 seek=7G
        losetup {{ ceph_loop_device }} {{ ceph_loop_device_file }}
        lsblk
      tags: dd
    - name: Use {pv,vg,lv}create to create logical volumes on loop device
      become: true
      shell: |
        pvcreate {{ ceph_loop_device }}
        vgcreate {{ ceph_logical_volume_group }} {{ ceph_loop_device }}
        lvcreate -n {{ ceph_logical_volume_wal }} -l 375 {{ ceph_logical_volume_group }}
        lvcreate -n {{ ceph_logical_volume_db }} -l 375 {{ ceph_logical_volume_group }}
        lvcreate -n {{ ceph_logical_volume_data }} -l 1041 {{ ceph_logical_volume_group }}
        lvs
      when: ci_branch is not match('(newton|ocata|pike|queens|rocky)')
      tags: lvm
